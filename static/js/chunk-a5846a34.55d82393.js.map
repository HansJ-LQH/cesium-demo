{"version":3,"sources":["webpack:///./node_modules/https-browserify/index.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/builtin-status-codes/browser.js","webpack:///./node_modules/stream-http/lib/request.js","webpack:///./node_modules/stream-http/index.js","webpack:///./node_modules/stream-http/lib/capability.js","webpack:///./node_modules/stream-http/lib/response.js","webpack:///./node_modules/to-arraybuffer/index.js"],"names":["http","url","https","module","exports","key","hasOwnProperty","validateParams","params","parse","protocol","Error","request","cb","call","this","get","extend","Object","prototype","target","i","arguments","length","source","inherits","response","stream","toArrayBuffer","IncomingMessage","rStates","readyStates","decideMode","preferBinary","useFetch","capability","fetch","mozchunkedarraybuffer","msstream","arraybuffer","vbArray","ClientRequest","opts","self","Writable","_opts","_body","_headers","auth","setHeader","Buffer","toString","keys","headers","forEach","name","mode","abortController","overrideMimeType","_mode","_fetchTimer","on","_onFinish","statusValid","xhr","status","e","value","lowerName","toLowerCase","unsafeHeaders","indexOf","getHeader","header","removeHeader","_destroyed","headersObj","body","method","concat","blobConstructor","global","Blob","map","buffer","type","headersList","keyName","Array","isArray","v","push","signal","controller","AbortController","_fetchAbortController","requestTimeout","setTimeout","emit","abort","undefined","credentials","withCredentials","then","_fetchResponse","_connect","reason","clearTimeout","_xhr","XMLHttpRequest","open","err","process","nextTick","responseType","split","timeout","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","_write","chunk","encoding","destroy","end","data","flushHeaders","setNoDelay","setSocketKeepAlive","statusCodes","defaultProtocol","location","search","host","hostname","port","path","toUpperCase","req","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","writableStream","isFunction","WritableStream","ArrayBuffer","getXHR","XDomainRequest","checkTypeSupport","haveArrayBuffer","haveSlice","slice","VBArray","UNSENT","OPENED","HEADERS_RECEIVED","fetchTimer","Readable","rawHeaders","trailers","rawTrailers","statusCode","statusMessage","statusText","writable","write","Promise","resolve","reject","_resumeFetch","close","pipeTo","catch","reader","getReader","read","result","done","_pos","responseURL","getAllResponseHeaders","matches","match","_charset","mimeType","charsetMatch","_read","responseBody","toArray","responseText","newData","substr","charCodeAt","Uint8Array","MSStreamReader","byteLength","onload","readAsArrayBuffer","buf","byteOffset","isBuffer","arrayCopy","len"],"mappings":"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","file":"static/js/chunk-a5846a34.55d82393.js","sourcesContent":["var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.arraybuffer) {\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t} else if (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tvar fetchTimer = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tglobal.clearTimeout(self._fetchTimer)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tglobal.clearTimeout(self._fetchTimer)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n","var Buffer = require('buffer').Buffer\n\nmodule.exports = function (buf) {\n\t// If the buffer is backed by a Uint8Array, a faster version will work\n\tif (buf instanceof Uint8Array) {\n\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\treturn buf.buffer\n\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t// Otherwise we need to get a proper copy\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t}\n\t}\n\n\tif (Buffer.isBuffer(buf)) {\n\t\t// This is the slow version that will work with any Buffer\n\t\t// implementation (even in old browsers)\n\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\tvar len = buf.length\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tarrayCopy[i] = buf[i]\n\t\t}\n\t\treturn arrayCopy.buffer\n\t} else {\n\t\tthrow new Error('Argument must be a Buffer')\n\t}\n}\n"],"sourceRoot":""}