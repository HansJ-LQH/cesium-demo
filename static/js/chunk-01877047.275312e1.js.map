{"version":3,"sources":["webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/builtin-status-codes/browser.js","webpack:///./node_modules/stream-http/lib/request.js","webpack:///./node_modules/stream-http/index.js","webpack:///./node_modules/stream-http/lib/capability.js","webpack:///./node_modules/stream-http/lib/response.js","webpack:///./node_modules/to-arraybuffer/index.js"],"names":["module","exports","extend","hasOwnProperty","Object","prototype","target","i","arguments","length","source","key","call","inherits","response","stream","toArrayBuffer","IncomingMessage","rStates","readyStates","decideMode","preferBinary","useFetch","capability","fetch","mozchunkedarraybuffer","msstream","arraybuffer","vbArray","ClientRequest","opts","self","this","Writable","_opts","_body","_headers","auth","setHeader","Buffer","toString","keys","headers","forEach","name","mode","abortController","overrideMimeType","Error","_mode","_fetchTimer","on","_onFinish","statusValid","xhr","status","e","value","lowerName","toLowerCase","unsafeHeaders","indexOf","getHeader","header","removeHeader","_destroyed","headersObj","body","method","concat","blobConstructor","global","Blob","map","buffer","type","headersList","keyName","Array","isArray","v","push","signal","controller","AbortController","_fetchAbortController","requestTimeout","setTimeout","emit","abort","url","undefined","credentials","withCredentials","then","_fetchResponse","_connect","reason","clearTimeout","_xhr","XMLHttpRequest","open","err","process","nextTick","responseType","split","timeout","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","_write","chunk","encoding","cb","destroy","end","data","flushHeaders","setNoDelay","setSocketKeepAlive","statusCodes","http","request","parse","defaultProtocol","location","protocol","search","host","hostname","port","path","toUpperCase","req","get","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","writableStream","isFunction","WritableStream","ArrayBuffer","getXHR","XDomainRequest","checkTypeSupport","haveArrayBuffer","haveSlice","slice","VBArray","UNSENT","OPENED","HEADERS_RECEIVED","fetchTimer","Readable","rawHeaders","trailers","rawTrailers","statusCode","statusMessage","statusText","writable","write","Promise","resolve","reject","_resumeFetch","close","pipeTo","catch","reader","getReader","read","result","done","_pos","responseURL","getAllResponseHeaders","matches","match","_charset","mimeType","charsetMatch","_read","responseBody","toArray","responseText","newData","substr","charCodeAt","Uint8Array","MSStreamReader","byteLength","onload","readAsArrayBuffer","buf","byteOffset","isBuffer","arrayCopy","len"],"mappings":"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","file":"static/js/chunk-01877047.275312e1.js","sourcesContent":["module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.arraybuffer) {\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t} else if (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tvar fetchTimer = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tglobal.clearTimeout(self._fetchTimer)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tglobal.clearTimeout(self._fetchTimer)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n","var Buffer = require('buffer').Buffer\n\nmodule.exports = function (buf) {\n\t// If the buffer is backed by a Uint8Array, a faster version will work\n\tif (buf instanceof Uint8Array) {\n\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\treturn buf.buffer\n\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t// Otherwise we need to get a proper copy\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t}\n\t}\n\n\tif (Buffer.isBuffer(buf)) {\n\t\t// This is the slow version that will work with any Buffer\n\t\t// implementation (even in old browsers)\n\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\tvar len = buf.length\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tarrayCopy[i] = buf[i]\n\t\t}\n\t\treturn arrayCopy.buffer\n\t} else {\n\t\tthrow new Error('Argument must be a Buffer')\n\t}\n}\n"],"sourceRoot":""}